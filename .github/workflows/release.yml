name: create release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  version: 1.0.0

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: /home/runner/work/libsunwait/libsunwait/CHANGES.txt
          draft: true
          prerelease: false

  release_assets:
    name: Upload assets
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04, ubuntu-20.04, macos-latest] #, macos-11.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: libsunwait
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
          make package
      - name: unpack
        if: runner.os != 'Linux'
        run: |
          tar xzvf build/sunwait-${{ env.version }}-Darwin.tar.gz
          zip -r libsunwait-${{ env.version }}-${{ matrix.os }}.zip sunwait-${{ env.version }}-Darwin LICENSE README.md 
          ls
          pwd
      - name: unpack
        if: runner.os =='Linux'
        run: |
          tar xzvf build/sunwait-${{ env.version }}-Linux.tar.gz      
          zip -r libsunwait-${{ env.version }}-${{ matrix.os }}.zip sunwait-${{ env.version }}-Linux LICENSE README.md
      - name: Upload Release Asset
        if: runner.os =='Linux'
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /home/runner/work/libsunwait/libsunwait/libsunwait-${{ env.version }}-${{ matrix.os }}.zip
          asset_name: libsunwait-${{ env.version }}-${{ matrix.os }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        if: runner.os !='Linux'
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /Users/runner/work/libsunwait/libsunwait/libsunwait-${{ env.version }}-${{ matrix.os }}.zip
          asset_name: libsunwait-${{ env.version }}-${{ matrix.os }}.zip
          asset_content_type: application/zip
